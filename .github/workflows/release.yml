name: Build & Release Tarball (Single Directory)

on:
  push:
    tags:
      - "*-*" # Matches tags like tmux-v0.2.0, nvim-v0.3.1
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ Extract Directory Name and Version
      - name: Parse tag
        id: parse
        run: |
          tag="${GITHUB_REF_NAME}"
          dir_name="${tag%%-*}"
          version="${tag#*-}"
          echo "dir_name=$dir_name" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT

      # 3️⃣ Create Tarball
      - name: Create Tarball
        run: |
          dir_name="${{ steps.parse.outputs.dir_name }}"
          version="${{ steps.parse.outputs.version }}"

          if [ -d "$dir_name" ]; then
            tar czf "${dir_name}-${version}.tar.gz" "$dir_name"
            mkdir artifacts
            mv "${dir_name}-${version}.tar.gz" artifacts/
            echo "Tarball Created: ${dir_name}-${version}.tar.gz"
          else
            echo "Error: Directory $dir_name not found."
            exit 1
          fi

      # 4️⃣ Create GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.tar.gz

      # 5️⃣ Update metadata.json
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Update metadata.json
        run: |
          dir_name="${{ steps.parse.outputs.dir_name }}"
          version="${{ steps.parse.outputs.version }}"

          if [ ! -f metadata.json ]; then
            echo "[]" > metadata.json
          fi

          cat metadata.json | jq \
            --arg name "$dir_name" \
            --arg version "${dir_name}-${version}" \
            '(.[] | select(.name == $name) | .latest_version) |= $version
              | if (.[] | select(.name == $name)) 
                then . 
                else . + [{"name": $name, "latest_version": $version }] 
                end' \
            > temp.json && mv temp.json metadata.json

      # 6️⃣ Commit and Push
      - name: Commit updated metadata.json
        uses: EndBug/add-and-commit@v9
        with:
          add: "metadata.json"
          message: "Update metadata.json for ${{ steps.parse.outputs.dir_name }}@${{ steps.parse.outputs.version }}"
